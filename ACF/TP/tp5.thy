theory tp5
imports Main 
begin

fun exactSubSeq:: "'a list \<Rightarrow> 'a list \<Rightarrow> bool"
where
"exactSubSeq [] [] = True"|
"exactSubSeq [] lb = True"|
"exactSubSeq la [] = False"|
"exactSubSeq (x1#xs1) (x2#xs2) = (if x1=x2 then exactSubSeq (xs1) (xs2) else exactSubSeq (x1#xs1) (xs2)) "

value "exactSubSeq [1::nat, 2] [1, 2, 3, 4]"
value "exactSubSeq [5::nat, 9] [1, 2, 3, 4]"
value "exactSubSeq [] [1, 2, 3, 4]"
value "exactSubSeq [1::nat, 2] []"

fun subSeq:: "'a list \<Rightarrow> 'a list \<Rightarrow> bool \<Rightarrow> bool"
where
"subSeq [] [] _ = True"|
"subSeq [] lb _ = True"|
"subSeq [x] [] b = b"|
"subSeq (v # vb # vc) [] c = c"|
"subSeq (x1#xs1) (x2#xs2) True = (if(x1=x2) then ((subSeq xs1 xs2 True) \<or> (subSeq xs1 (x2#xs2) False))
                                            else (subSeq xs1 (x1#xs2) True) \<or> (subSeq xs1 (x2#xs2) False))"
|
"subSeq (x1#xs1) (x2#xs2) False = (if(x1=x2) then ((subSeq xs1 xs2 False)) else (subSeq xs1 xs2 False)) "

value "subSeq [] []"
value "subSeq [1::nat, 2] [1, 2, 3, 4]"

lemma "(subSeq l1 l2) = ((exactSubSeq l1 l2) \<or> (?la lb x l1=la@[x]lb \<and> exactSubSeq(la@lb)l2))"
nitpick

code_printing
  code_module "" \<rightharpoonup> (Scala) 

{*// Code generated by Isabelle
package TP5
*}

export_code subSeq in Scala 
  (* file "tp5.scala" *)
end

