3.1

SELECT * FROM Film WHERE titre='Vertigo';

 		OPERATION  	 OBJECT_NAME  	 CARDINALITY  	 COST 
	 SELECT STATEMENT	  					1       	 3 
    	
	 TABLE ACCESS (FULL)    FILM  	 		1 		 	 3 
    	    	
	 Filter Predicates 
    	    	    	
	 	TITRE='Vertigo' 

This type of scan reads all rows from a table and filters out those that do not meet the selection criteria. 

3.2

SELECT nom,prenom FROM film f,artiste a WHERE f.annee=a.annee_naissance and titre='Vertigo';

		OPERATION  	 OBJECT_NAME  	 CARDINALITY  	 COST 
   SELECT STATEMENT 			   	    	   3  	    7 
    	
	 HASH JOIN 								   3        7 
    	    	
	 Access Predicates 
    	    	    	
	 	F.ANNEE=A.ANNEE_NAISSANCE 
    	    	
	 TABLE ACCESS (FULL)	FILM 		 	   1	    3 
    	    	    	
	 Filter Predicates 
    	    	    	    	
	 	TITRE='Vertigo' 
    	    	
	 TABLE ACCESS (FULL) ARTISTE  			 192  	    3 

Pas d'index (full table access)

3.3

SELECT * FROM film WHERE id=21;

		OPERATION  	 OBJECT_NAME  	 CARDINALITY  	 COST 
	 SELECT STATEMENT 						1	  	 1 
    	
  TABLE ACCESS 			 FILM		        1    	 1 
    (BY INDEX ROWID)
	    	
	 INDEX 			 SYS_C00114137 	        1 	 	 1 
    (UNIQUE SCAN)
	    	    	
	 Access Predicates 
    	    	    	    	
	 	ID=21 

Il y a bien un index sur l'attribut id de la table film.

3.4

		OPERATION  	 OBJECT_NAME  	 CARDINALITY  	 COST 
SELECT STATEMENT 					    	 64  	 7 
    	
HASH JOIN 							    	 64  	 7 
    	    	
	 Access Predicates 
    	    	    	
	 	F.ID_REALISATEUR=A.ID
    	    	
TABLE ACCESS (FULL)		 FILM 			 	 64  	 3 
    	    	
TABLE ACCESS (FULL)	  ARTISTE			 	 192  	 3 

On aurait pu chercher tous les id_realisateur (FULL SCAN sur FILM) et ensuite faire une recherche par index (INDEX SCAN sur artiste).

3.5

			OPERATION  	 OBJECT_NAME  	 CARDINALITY  	 COST 
SELECT STATEMENT 						    	 1  	 4 
    	
NESTED LOOPS 
	 										   	 1  	 4 
    	    	
 NESTED LOOPS 
	 										   	 1  	 4 
    	    	    	
  TABLE ACCESS 			 ARTISTE			  	 1  	 1 
  (INDEX BY ROWID)
  	    	    	    	
    INDEX (UNIQUE SCAN)	 SYS_C00114132			 1  	 1 
    	    	    	    	    	
	 Access Predicates 
    	    	    	    	    	    	
	 	AND 
    	    	    	    	    	    	    	
	 		A.NOM='Stewart' 
    	    	    	    	    	    	    	
	 		A.PRENOM='James' 
    	    	    	
  TABLE ACCESS (FULL)		 FILM			  	 1  	 3 
    	    	    	    	
	 Filter Predicates 
    	    	    	    	    	
 		 F.ANNEE=1958 
    	    	
INDEX (UNIQUE SCAN)	 SYS_C00114148			  	 1  	 0 
    	    	    	
	 Access Predicates 
    	    	    	    	
	 	AND 
    	    	    	    	    	
	 		F.ID=R.ID_FILM 
    	    	    	    	    	
	 		R.ID_ACTEUR=A.ID 

Ces deux requêtes sont équivalentes du point de vue sémantique mais leur plan d'éxécution est le même.

3.6

Même réponse que 3.5.

3.7

Ces deux requêtes sont équivalentes du point de vue sémantique et leur plan d'éxécution n'est pas le même.

		OPERATION  	 OBJECT_NAME  	 CARDINALITY  	 COST 
SELECT STATEMENT 					    	 1  	 4 
    	
NESTED LOOPS (SEMI)					    	 1  	 4 
    	    	
 TABLE ACCESS (FULL)		 FILM 			 1  	 3 
    	    	    	
	 Filter Predicates 
    	    	    	    	
	 	ANNEE=1958 
    	    	
 VIEW PUSHED PREDICATE VW_NSO_1			  	 1  	 1 
    	    	    	
  NESTED LOOPS  							 1  	 1 
    	    	    	    	
   TABLE ACCESS		 	 ARTISTE		  	 1  	 1
	(By INDEX ROWID)
    	    	    	    	
   INDEX (UNIQUE SCAN)	 SYS_C00114148 	 	 1  	 0 
    	    	    	    	    	
	 Access Predicates 
    	    	    	    	    	    	
	 	AND 
    	    	    	    	    	    	    	
	 		ID_FILM=ID 
    	    	    	    	    	    	    	
	 		ID_ACTEUR=ID 

3.8

La rédaction SQL permet d'optimiser les temps d'éxécution.






















